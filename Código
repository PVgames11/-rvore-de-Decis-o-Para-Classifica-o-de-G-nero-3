from sklearn import tree
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
X=[[165,19],[175,32],[136,35],[174,65],[141,28],[176,15],[131,32],[166,6],[128,32],[179,10],[136,34],[186,2],[126,25],[176,28],[112,38],[169,9],[171,36],[116,25],[196,25], [196,38], [126,40], [197,20], [150,25], [140,32],[136,35]]
y=['Man','Woman','Woman','Man','Woman','Man','Woman','Man','Woman','Man','Woman','Man','Woman','Woman','Woman','Man','Woman','Woman','Man', 'Woman', 'Woman', 'Man', 'Man', 'Woman', 'Woman']
data_feature_names = ['height','length of hair']
data_class_names = ['man','woman']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 1)
clf = tree.DecisionTreeClassifier()
clf = clf.fit(X_train,y_train)
y_prediction = clf.predict(X_test)
print("Prediction for Decision Tree: ",y_prediction)
print("Accuracy:",accuracy_score(y_test,y_prediction))
tree.plot_tree(clf, feature_names = data_feature_names, class_names= data_class_names, filled = True)
